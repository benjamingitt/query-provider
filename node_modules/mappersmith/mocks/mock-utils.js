"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toSortedQueryString = toSortedQueryString;
exports.sortedUrl = sortedUrl;

var _utils = require("../utils");

function toSortedQueryString(entry) {
  if (!(0, _utils.isPlainObject)(entry)) {
    return entry;
  }

  return (0, _utils.validKeys)(entry).sort().map(function (key) {
    return (0, _utils.buildRecursive)(key, entry[key]);
  }).join('&').replace(/%20/g, '+');
}
/**
 * Sort the query params on a URL based on the 'key=value' string value.
 * E.g. /example?b=2&a=1 will become /example?a=1&b=2
 *
 * @param {String} url - a URL that should be sorted (with or without query params)
 */


function sortedUrl(url) {
  var urlParts = url.split('?');

  if (urlParts.length > 1) {
    var query = urlParts[1];
    var sortedQuery = query.split('&').sort().join('&');
    return "".concat(urlParts[0], "?").concat(sortedQuery);
  } else {
    return urlParts[0];
  }
}